// <auto-generated />
using System;
using CountryCurrency_Exchange.API.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CountryCurrency_Exchange.API.Migrations
{
    [DbContext(typeof(CountryCurrencyDbContext))]
    [Migration("20251027174845_migration3")]
    partial class migration3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CountryCurrency_Exchange.API.Model.CountryModel.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Capital")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("currency_code");

                    b.Property<decimal>("EstimatedGdp")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("estimated_gdp");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("exchange_rate");

                    b.Property<string>("FlagUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastRefreshedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Population")
                        .HasColumnType("bigint");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capital = "Abuja",
                            CurrencyCode = "NGN",
                            EstimatedGdp = 25767448125.2m,
                            ExchangeRate = 1600.2m,
                            FlagUrl = "https://flagcdn.com/ng.svg",
                            LastRefreshedAt = new DateTime(2025, 10, 27, 17, 48, 44, 620, DateTimeKind.Utc).AddTicks(2724),
                            Name = "Nigeria",
                            Population = 206139589L,
                            Region = "Africa"
                        },
                        new
                        {
                            Id = 2,
                            Capital = "Accra",
                            CurrencyCode = "GHS",
                            EstimatedGdp = 3029834520.6m,
                            ExchangeRate = 15.34m,
                            FlagUrl = "https://flagcdn.com/gh.svg",
                            LastRefreshedAt = new DateTime(2025, 10, 27, 17, 48, 44, 620, DateTimeKind.Utc).AddTicks(2728),
                            Name = "Ghana",
                            Population = 31072940L,
                            Region = "Africa"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
